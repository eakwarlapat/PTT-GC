// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PTT_GC_API.Data;

namespace PTT_GC_API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200225155422_AddColumnCodevAndOwner")]
    partial class AddColumnCodevAndOwner
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PTT_GC_API.Models.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("File")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("PTT_GC_API.Models.BuWorkstream", b =>
                {
                    b.Property<string>("BuWorkstreamId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BuWorkstreamTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BuWorkstreamId");

                    b.ToTable("BuWorkstreams");
                });

            modelBuilder.Entity("PTT_GC_API.Models.CoDeveloper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoDeveloperName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indicator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CoDevelopers");
                });

            modelBuilder.Entity("PTT_GC_API.Models.EntryMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EntryModeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryModeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EntryModes");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Financial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AvgEbitda")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AvgRevenue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCapex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalOpex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalValuation")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId")
                        .IsUnique();

                    b.ToTable("Financials");
                });

            modelBuilder.Entity("PTT_GC_API.Models.FinancialIndicator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Capex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Ebitda")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Opex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Revenue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Valuation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("FinancialIndicators");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("BenefitAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BenefitAmountType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuWorkStream")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BudgetType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Cim")
                        .HasColumnType("bit");

                    b.Property<decimal?>("CostEstCapex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("Cpi")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DeletedFlag")
                        .HasColumnType("bit");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool?>("Dim")
                        .HasColumnType("bit");

                    b.Property<bool?>("DirectCapex")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FinishingDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("FxExchange")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("InitiativeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Irr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("JFactor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LastActivity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<bool?>("Max")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Other")
                        .HasColumnType("bit");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PayBackPeriod")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("Pim")
                        .HasColumnType("bit");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Ram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RandD")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RegisteringDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequestCapex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultObjective")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("SpecifyLocation")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Strategy")
                        .HasColumnType("bit");

                    b.Property<string>("TypeBenefit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfInvestment")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("costEstCapexType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Initiatives");
                });

            modelBuilder.Entity("PTT_GC_API.Models.InitiativeCoDeveloper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoDeveloperName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("InitiativeCoDevelopers");
                });

            modelBuilder.Entity("PTT_GC_API.Models.InitiativeDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EntryMode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FX")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("FirstBudgetYear")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("FxChoice")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("HaveProduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime?>("PlanBOD1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlanBOD2")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ShareOfInvestment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StrategicObjective")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("StrategyDetail")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId")
                        .IsUnique();

                    b.ToTable("InitiativeDetails");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Milestone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("KeyDeliverable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilestoneStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("Milestones");
                });

            modelBuilder.Entity("PTT_GC_API.Models.MilestoneStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MilestoneStatusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilestoneStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MilestoneStatuses");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indicator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Plant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PlantId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlantTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Capacity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ProductUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductUnitId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductUnitTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductUnits");
                });

            modelBuilder.Entity("PTT_GC_API.Models.StrategicObjective", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StrategicObjectiveId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrategicObjectiveTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StrategicObjectives");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Strategy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StrategyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrategyTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Strategies");
                });

            modelBuilder.Entity("PTT_GC_API.Models.TypeOfInvestment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeOfInvestmentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfInvestmentTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeOfInvestments");
                });

            modelBuilder.Entity("PTT_GC_API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Approver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Attachment", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative", null)
                        .WithMany("Attachments")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Financial", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative", null)
                        .WithOne("Financials")
                        .HasForeignKey("PTT_GC_API.Models.Financial", "InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.FinancialIndicator", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative", null)
                        .WithMany("FinancialIndicators")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.InitiativeCoDeveloper", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative", null)
                        .WithMany("InitiativeCoDevelopers")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.InitiativeDetail", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative", null)
                        .WithOne("InitiativeDetails")
                        .HasForeignKey("PTT_GC_API.Models.InitiativeDetail", "InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Milestone", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative", null)
                        .WithMany("Milestones")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Product", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative", null)
                        .WithMany("Products")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PTT_GC_API.Data;

namespace PTT_GC_API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200630181231_UpdateCapexBudgetSurvey")]
    partial class UpdateCapexBudgetSurvey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PTT_GC_API.Models.CapexInformation.AnnualInvestmentPlan", b =>
                {
                    b.Property<int>("AnnualInvestmentPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CapexInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CurrencyFx")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("PlanType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Year1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Year10")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Year2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Year3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Year4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Year5")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Year6")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Year7")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Year8")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Year9")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("YearOverall")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AnnualInvestmentPlanId");

                    b.ToTable("AnnualInvestmentPlans");
                });

            modelBuilder.Entity("PTT_GC_API.Models.CapexInformation.CapexInformations", b =>
                {
                    b.Property<int>("CapexInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActionYear")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("AdditionalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BetweenYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BudgetPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BudgetYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapexStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapexType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CarriedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CodeCostCenterOfVP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CostCenter")
                        .HasColumnType("int");

                    b.Property<string>("CostCenterOfVP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ExistingBudget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsMaxApprovedRev")
                        .HasColumnType("bit");

                    b.Property<string>("PoolBudgetForm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProjecctComRun")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ProjectCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProjectExePeriodMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectExePeriodYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonOfChanging")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RequestIniNoDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("RequestPoolMAX")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ReturnCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Revistion")
                        .HasColumnType("int");

                    b.Property<int?>("Sequent")
                        .HasColumnType("int");

                    b.Property<decimal?>("SpendingActual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SpendingActualAllPrevious")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SpendingActualCurrentYear")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("StartingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubmitTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransferForm")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CapexInformationId");

                    b.ToTable("CapexInformations");
                });

            modelBuilder.Entity("PTT_GC_API.Models.CapexInformation.DetailCapex", b =>
                {
                    b.Property<int>("DetailCapexId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BaseCase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComparisonWithOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsistenWithCompanyStrategy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorporateImageIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DepreciationCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DivisionManagerOfOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EbitdaBaseCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EbitdaOptimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EbitdaPessimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ExpectedTargetAndResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("KeySuccessFactor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KpisCapexId")
                        .HasColumnType("int");

                    b.Property<string>("KpisRemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketOverview")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MileStoneAndSchedule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NpvBaseCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NpvOptimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NpvPessimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OptimisticCase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherBusiness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherInvestment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherQuality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherResourcesNeeded")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherStrategic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PaybackBaseCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PaybackOptimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PaybackPessimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PessimisticCase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PotentialCustomer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductionProcess")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ProjectIrrBaseCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ProjectIrrOptimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ProjectIrrPessimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SafetyIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceOfFeedstock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SynergyBenefit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsefulLife")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VicePresidentOfOwner")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DetailCapexId");

                    b.ToTable("DetailCapexs");
                });

            modelBuilder.Entity("PTT_GC_API.Models.CapexInformation.KpisCapex", b =>
                {
                    b.Property<int>("KpisCapexId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DetailCapexId")
                        .HasColumnType("int");

                    b.Property<string>("Frequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kpis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Target")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KpisCapexId");

                    b.ToTable("KpisCapexs");
                });

            modelBuilder.Entity("PTT_GC_API.Models.CapexInformation.MonthlyInvestmentPlan", b =>
                {
                    b.Property<int>("MonthlyInvestmentPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnnualInvestmentPlanId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Apr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Aug")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CapexInformationId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Dec")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Feb")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("InvestmentCost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("InvestmentCostFx")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Jan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Jul")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Jun")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Mar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("May")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MonthlyOverall")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Nov")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Oct")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Sep")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SumMonthlyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearOfMonth")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MonthlyInvestmentPlanId");

                    b.ToTable("MonthlyInvestmentPlans");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Chart.BlankablePlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BlankableValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BlankablePlans");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Chart.CLevelTargetLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Target")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CLevelTargetLines");
                });

            modelBuilder.Entity("PTT_GC_API.Models.CoDeveloper.CoDeveloper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoDeveloperName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indicator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CoDevelopers");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Currency.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrencyTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("PTT_GC_API.Models.DetailInformation.Frequency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FrequencyTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Frequencies");
                });

            modelBuilder.Entity("PTT_GC_API.Models.DetailInformation.InitiativeTypeMax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InitiativeTypeMaxTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InitiativeTypeMaxs");
                });

            modelBuilder.Entity("PTT_GC_API.Models.DetailInformation.KpiDetailInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Frequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("Kpis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Target")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("KpiDetailInformations");
                });

            modelBuilder.Entity("PTT_GC_API.Models.DetailInformation.Kpis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KpisTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kpises");
                });

            modelBuilder.Entity("PTT_GC_API.Models.DetailInformation.Procurement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProcurementName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcurementType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Procurements");
                });

            modelBuilder.Entity("PTT_GC_API.Models.DetailInformation.SubWorkstream", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CLevelOrder")
                        .HasColumnType("int");

                    b.Property<string>("SubWorkstream1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubWorkstream2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Subworkstream1Order")
                        .HasColumnType("int");

                    b.Property<string>("WorkStreamTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WorkstreamOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SubWorkstreams");
                });

            modelBuilder.Entity("PTT_GC_API.Models.EntryMode.EntryMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EntryModeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryModeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EntryModes");
                });

            modelBuilder.Entity("PTT_GC_API.Models.IF.IncomingFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DirectoryPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IncomingFile");
                });

            modelBuilder.Entity("PTT_GC_API.Models.IF.OutgoingFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DirectoryPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OutgoingFile");
                });

            modelBuilder.Entity("PTT_GC_API.Models.IF.TmpInitiativeCodeIF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IFType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TmpInitiativeIdIFs");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ITBudget.CapexBudgetSurvey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChoiceValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Effective")
                        .HasColumnType("datetime2");

                    b.Property<string>("Impact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("Law")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopicId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CapexBudgetSurveys");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ITBudget.CapexChoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CapexTopicId")
                        .HasColumnType("int");

                    b.Property<string>("ChoiceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChoiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChoiceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopicId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CapexTopicId");

                    b.ToTable("CapexChoices");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ITBudget.CapexTopic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsYesOrNo")
                        .HasColumnType("bit");

                    b.Property<string>("TopicId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopicName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CapexTopics");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ITBudget.ITAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CostPerUnit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ITAssets");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ITBudget.ITBudgetSurvey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdvancedCapexChoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapexNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CapexSummary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("OpexNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OpexSummary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ITBudgetSurveys");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ITBudget.ITBudgetSurveyAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CostPerUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ITBudgetSurveyId")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfUnit")
                        .HasColumnType("int");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalMTHB")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ITBudgetSurveyAssets");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ImpactTracking.ImpactTypeOfBenefit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("FixedFX")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("ImpactTypeOfBenefitTable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiativeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Month1")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month10")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month11")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month12")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month13")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month14")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month15")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month16")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month17")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month18")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month19")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month2")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month20")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month21")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month22")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month23")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month24")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month25")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month26")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month27")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month28")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month29")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month3")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month30")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month31")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month32")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month33")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month34")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month35")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month36")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month4")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month5")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month6")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month7")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month8")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Month9")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("RunRate")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("TypeOfBenefit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VersionPrice")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("ImpactTypeOfBenefits");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ImpactTracking.ShareBenefitWorkstream", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Percent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Workstream")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("ShareBenefitWorkstreams");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("File")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChangeSetId")
                        .HasColumnType("int");

                    b.Property<string>("CommentBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommentByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CommentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CommentDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiativeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.DetailInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BaseCase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Baseline")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BaselineHistorical")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BaselineNonHistorical")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Boi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoiNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Capital")
                        .HasColumnType("bit");

                    b.Property<bool?>("Catalyst")
                        .HasColumnType("bit");

                    b.Property<string>("ComparisonWithOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Consistent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Coordinate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorporateImageIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CutFeedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("CycleMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CycleYear")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DepreciationCost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EbitdaBaseCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EbitdaOptimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EbitdaPessimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EquipmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentOrAsset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpectedTarget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForEnvironment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForTurnaround")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HaveAdditional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IL3Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("IL4Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("IL5Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("InitiativeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("InitiativeTypeMax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiativeYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeySuccessFactor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketOverview")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilestoneSchedule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NpvBaseCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NpvOptimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NpvPessimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OldAssetCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldAssetNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptimisticCase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherBusiness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherInvestment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherKpis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherQuality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherStrategic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PaybackBaseCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PaybackOptimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PaybackPessimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PessimisticCase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PotentialCustomer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("President")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProLever")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProSubCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductionProcess")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ProjectIrrBaseCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ProjectIrrOptimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ProjectIrrPessimisticCase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProjectManager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplaceEquipment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReplacementDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("RightOfUse")
                        .HasColumnType("bit");

                    b.Property<string>("SafetyIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Saving")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SavingHistorical")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SavingNonHistorical")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("Software")
                        .HasColumnType("bit");

                    b.Property<string>("SourceOfFeedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartUpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StrategicObjective")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Strategy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubWorkstream1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubWorkstream2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SynergyBenefit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("UsefulMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UsefulYear")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Workstream")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("otherResources")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId")
                        .IsUnique();

                    b.ToTable("DetailInformations");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.Financial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AvgEbitda")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AvgRevenue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCapex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalOpex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalValuation")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId")
                        .IsUnique();

                    b.ToTable("Financials");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.FinancialIndicator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Capex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Ebitda")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Opex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Revenue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Valuation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("FinancialIndicators");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.ImpactTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AutoCalculate")
                        .HasColumnType("bit");

                    b.Property<string>("ContactIO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactIOBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("FinancialImpactArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FirstApprovedIL4Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FirstRunRateMonth")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HaveShareBenefit")
                        .HasColumnType("bit");

                    b.Property<decimal?>("IL4RunRateOnetime")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("IL4RunRateRecurring")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("IL5FixedFxOnetime")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("IL5FixedFxRecurring")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("IL5FloatFxOnetime")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("IL5FloatFxRecurring")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("IL5RunRateOnetime")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("IL5RunRateRecurring")
                        .HasColumnType("decimal(18,3)");

                    b.Property<bool>("ImpiemantCost")
                        .HasColumnType("bit");

                    b.Property<bool>("IndirectBenefit")
                        .HasColumnType("bit");

                    b.Property<string>("InitiativeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastApprovedIL4Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastApprovedIL5Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastSubmittedSIL4Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastSubmittedSIL5Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SIL4Achievement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SIL5Achievement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToComment")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<decimal?>("TotalCostOPEX")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TotalOnetime")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TotalRecurring")
                        .HasColumnType("decimal(18,3)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId")
                        .IsUnique();

                    b.ToTable("ImpactTrackings");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.Initiative", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Background")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<decimal?>("BenefitAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BenefitAmountType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BudgetSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BudgetType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Cim")
                        .HasColumnType("bit");

                    b.Property<string>("CommentCancelled")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CostEstCapex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CostEstCapexType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CostEstOpex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CostEstOpexType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Cpi")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DeletedFlag")
                        .HasColumnType("bit");

                    b.Property<bool?>("Dim")
                        .HasColumnType("bit");

                    b.Property<bool?>("DirectCapex")
                        .HasColumnType("bit");

                    b.Property<bool?>("Divestment")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FinishingDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("FxExchange")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GoToStage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ITDigital")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiativeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiativeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Integration")
                        .HasColumnType("bit");

                    b.Property<bool?>("InvolveItDigital")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Irr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("JFactor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LagacyInitiativeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LagacyInitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("LastActivity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastSubmittedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Max")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Other")
                        .HasColumnType("bit");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PayBackPeriod")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("Pim")
                        .HasColumnType("bit");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PoolType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RandD")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RegisteringDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestCapex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestOpex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequestProjectEngineer")
                        .HasColumnType("bit");

                    b.Property<string>("ResultObjective")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ScopeOfWork")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("SecretProject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecifyCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecifyLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecifyPlant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Strategy")
                        .HasColumnType("bit");

                    b.Property<bool?>("TrackMax")
                        .HasColumnType("bit");

                    b.Property<string>("TypeBenefit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfInvestment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Wacc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Initiatives");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.InitiativeAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("InitiativeActions");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.InitiativeCoDeveloper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoDeveloperName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("InitiativeCoDevelopers");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.InitiativeDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BOD1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BOD2")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntryMode")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("FX")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("FirstBudgetYear")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("FxChoice")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("HaveProduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Irr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<decimal?>("Npv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("RequireBOD1")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ShareOfInvestment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Specify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrategicObjective")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("StrategyDetail")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId")
                        .IsUnique();

                    b.ToTable("InitiativeDetails");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.InitiativeStatusHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastSubmittedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InitiativeStatusHistory");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.InitiativeStatusTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HistoryId")
                        .HasColumnType("int");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("ProcessType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("InitiativeStatusTrackings");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.MaxApprover", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApproverEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproverType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MaxApprovers");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.MaxApproverSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApproverEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indicator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<string>("WorkstreamType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkstreamValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MaxApproverSettings");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.Milestone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("KeyDeliverable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilestoneStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("Milestones");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Capacity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.V_Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChangeSetId")
                        .HasColumnType("int");

                    b.Property<string>("CommentBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommentByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CommentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CommentDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiativeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("V_Audits");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Milestone.MilestoneStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MilestoneStatusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilestoneStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MilestoneStatuses");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Organization.Organization", b =>
                {
                    b.Property<string>("OrganizationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OrganizationTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrganizationId");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("PTT_GC_API.Models.OverviewPermission.OverviewPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OverviewPermissions");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Owner.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AssignmentCostCenter")
                        .HasColumnType("int");

                    b.Property<string>("BloodGrp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CEOManagerEmpID")
                        .HasColumnType("int");

                    b.Property<int?>("CEOManagerPositionID")
                        .HasColumnType("int");

                    b.Property<int?>("CEOOrgID")
                        .HasColumnType("int");

                    b.Property<string>("CEOShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEOTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyCode")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyShortTxt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepManagerEmpID")
                        .HasColumnType("int");

                    b.Property<int?>("DepManagerPositionID")
                        .HasColumnType("int");

                    b.Property<int?>("DepOrgID")
                        .HasColumnType("int");

                    b.Property<string>("DepShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DivManagerEmpID")
                        .HasColumnType("int");

                    b.Property<int?>("DivManagerPositionID")
                        .HasColumnType("int");

                    b.Property<int?>("DivOrgID")
                        .HasColumnType("int");

                    b.Property<string>("DivShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpGroupTxt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmpSubGroup")
                        .HasColumnType("int");

                    b.Property<string>("EmpSubGroupTxt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmploymentStatus")
                        .HasColumnType("int");

                    b.Property<string>("EmploymentStatusTxt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FNGRPManagerEmpID")
                        .HasColumnType("int");

                    b.Property<int?>("FNGRPManagerPositionID")
                        .HasColumnType("int");

                    b.Property<int?>("FNGRPOrgID")
                        .HasColumnType("int");

                    b.Property<string>("FNGRPShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FNGRPTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FNManagerEmpID")
                        .HasColumnType("int");

                    b.Property<int?>("FNManagerPositionID")
                        .HasColumnType("int");

                    b.Property<int?>("FNOrgID")
                        .HasColumnType("int");

                    b.Property<string>("FNShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FNTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indicator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MainPositionCostCenter")
                        .HasColumnType("bigint");

                    b.Property<bool?>("MainPositionFlg")
                        .HasColumnType("bit");

                    b.Property<bool?>("ManagerialFlag")
                        .HasColumnType("bit");

                    b.Property<int?>("OrgID")
                        .HasColumnType("int");

                    b.Property<int?>("OrgLevel")
                        .HasColumnType("int");

                    b.Property<string>("OrgShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PSDManagerEmpID")
                        .HasColumnType("int");

                    b.Property<int?>("PSDManagerPositionID")
                        .HasColumnType("int");

                    b.Property<int?>("PSDOrgID")
                        .HasColumnType("int");

                    b.Property<string>("PSDShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PSDTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentOrgID")
                        .HasColumnType("int");

                    b.Property<int?>("PositionID")
                        .HasColumnType("int");

                    b.Property<int?>("PositionLevel")
                        .HasColumnType("int");

                    b.Property<string>("PositionShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShiftManagerEmpID")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftManagerPositionID")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftOrgID")
                        .HasColumnType("int");

                    b.Property<string>("ShiftShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupManagerEmpID")
                        .HasColumnType("int");

                    b.Property<int?>("SupManagerPositionID")
                        .HasColumnType("int");

                    b.Property<int?>("SupOrgID")
                        .HasColumnType("int");

                    b.Property<string>("SupShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UnitManagerEmpID")
                        .HasColumnType("int");

                    b.Property<int?>("UnitManagerPositionID")
                        .HasColumnType("int");

                    b.Property<int?>("UnitOrgID")
                        .HasColumnType("int");

                    b.Property<string>("UnitShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Permission.PageSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PageSettings");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Permission.RoleManagement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIndividual")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("PageId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SectionId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoleManagements");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Permission.RoleSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoleSettings");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Permission.SectionSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SectionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SectionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SectionSettings");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Permission.UserManagement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsIgnoreHrWebService")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("UserManagements");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Permission.UserOrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OrganizationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserOrganizations");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Permission.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Permission.UserWorkstream", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("WorkstreamId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserWorkstreams");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Plant.Plant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PlantId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlantTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("PTT_GC_API.Models.PoolBudget.PoolBudgetFrom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PoolBudgetFromId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PoolBudgetFromName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PoolBudgetFrom");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Product.ProductUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductUnitId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductUnitTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductUnits");
                });

            modelBuilder.Entity("PTT_GC_API.Models.ProgressAndMilestone.ProgressDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Activity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ActualFinish")
                        .HasColumnType("datetime2");

                    b.Property<string>("InitiativeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitiativeId")
                        .HasColumnType("int");

                    b.Property<string>("KeyDeliverable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Milestone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PlanFinish")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("ProgressDetails");
                });

            modelBuilder.Entity("PTT_GC_API.Models.SettingChart.CustomReportDetail", b =>
                {
                    b.Property<int>("RunningID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AggregateFunction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Axis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReportID")
                        .HasColumnType("int");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("RunningID");

                    b.ToTable("CustomReportDetail");
                });

            modelBuilder.Entity("PTT_GC_API.Models.SettingChart.CustomReportHeader", b =>
                {
                    b.Property<int>("RunningID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GraphType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherTypeLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReportID")
                        .HasColumnType("int");

                    b.Property<string>("ReportName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemReportType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("X_AxisLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Y_AxisLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isAccumulate")
                        .HasColumnType("bit");

                    b.HasKey("RunningID");

                    b.ToTable("CustomReportHeader");
                });

            modelBuilder.Entity("PTT_GC_API.Models.SettingChart.CustomReportParameter", b =>
                {
                    b.Property<int>("RunningID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DefaultValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilterCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParameterField")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParameterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParameterType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReportID")
                        .HasColumnType("int");

                    b.Property<string>("Required")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("RunningID");

                    b.ToTable("CustomReportParameter");
                });

            modelBuilder.Entity("PTT_GC_API.Models.SettingChart.CustomReportReportType", b =>
                {
                    b.Property<int>("RunningID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderBy")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RunningID");

                    b.ToTable("CustomReportReportType");
                });

            modelBuilder.Entity("PTT_GC_API.Models.SettingChart.CustomReportStageType", b =>
                {
                    b.Property<int>("RunningID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderBy")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RunningID");

                    b.ToTable("CustomReportStageType");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Strategy.StrategicObjective", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StrategicObjectiveCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrategicObjectiveTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StrategicObjectives");
                });

            modelBuilder.Entity("PTT_GC_API.Models.Strategy.Strategy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("StrategicObjectiveId")
                        .HasColumnType("int");

                    b.Property<string>("StrategyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrategyTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StrategicObjectiveId");

                    b.ToTable("Strategies");
                });

            modelBuilder.Entity("PTT_GC_API.Models.TempHRWebService.TempHRWebService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyShortTxt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepManagerEmpID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepManagerPositionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepOrgID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivManagerEmpID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivManagerPositionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivOrgID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ENFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ENLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ENTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indicator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MainPositionCostCenter")
                        .HasColumnType("int");

                    b.Property<string>("OrgID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentOrgID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftManagerEmpID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftManagerPositionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftOrgID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupManagerEmpID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupManagerPositionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupOrgID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitOrgID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitShortTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitTextEN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TempHRWebServices");
                });

            modelBuilder.Entity("PTT_GC_API.Models.TypeOfBenefit.TypeOfBenefit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeOfBenefitCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfBenefitGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfBenefitTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeOfBenefits");
                });

            modelBuilder.Entity("PTT_GC_API.Models.TypeOfInvestment.TypeOfInvestment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeOfInvestmentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfInvestmentTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeOfInvestments");
                });

            modelBuilder.Entity("PTT_GC_API.Models.TypeofStage.TypeStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeStage");
                });

            modelBuilder.Entity("PTT_GC_API.Models.TypeofStage.TypeStageApprover", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Approver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeStageApprover");
                });

            modelBuilder.Entity("PTT_GC_API.Models.URLTableSetting.URLTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URLType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("URLTables");
                });

            modelBuilder.Entity("PTT_GC_API.Models.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PTT_GC_API.Models.WorkStream.WorkStream", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkStreamTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkStreams");
                });

            modelBuilder.Entity("PTT_GC_API.Models.DetailInformation.KpiDetailInformation", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithMany("KpiDetailInformations")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.ITBudget.CapexChoice", b =>
                {
                    b.HasOne("PTT_GC_API.Models.ITBudget.CapexTopic", null)
                        .WithMany("CapexChoices")
                        .HasForeignKey("CapexTopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.ImpactTracking.ImpactTypeOfBenefit", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithMany("ImpactTypeOfBenefits")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.ImpactTracking.ShareBenefitWorkstream", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithMany("ShareBenefitWorkstreams")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.Attachment", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithMany("Attachments")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.DetailInformation", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithOne("DetailInformations")
                        .HasForeignKey("PTT_GC_API.Models.Initiative.DetailInformation", "InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.Financial", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithOne("Financials")
                        .HasForeignKey("PTT_GC_API.Models.Initiative.Financial", "InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.FinancialIndicator", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithMany("FinancialIndicators")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.ImpactTracking", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithOne("ImpactTrackings")
                        .HasForeignKey("PTT_GC_API.Models.Initiative.ImpactTracking", "InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.InitiativeAction", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithMany("InitiativeActions")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.InitiativeCoDeveloper", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithMany("InitiativeCoDevelopers")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.InitiativeDetail", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithOne("InitiativeDetails")
                        .HasForeignKey("PTT_GC_API.Models.Initiative.InitiativeDetail", "InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.InitiativeStatusTracking", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithMany("InitiativeStatusTrackings")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.Milestone", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithMany("Milestones")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Initiative.Product", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithMany("Products")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.ProgressAndMilestone.ProgressDetail", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Initiative.Initiative", null)
                        .WithMany("ProgressDetails")
                        .HasForeignKey("InitiativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTT_GC_API.Models.Strategy.Strategy", b =>
                {
                    b.HasOne("PTT_GC_API.Models.Strategy.StrategicObjective", null)
                        .WithMany("Strategies")
                        .HasForeignKey("StrategicObjectiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
